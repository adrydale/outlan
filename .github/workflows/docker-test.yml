name: Test Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: outlan:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image functionality
      run: |
        # Start the container
        docker run -d --name outlan-test -p 5000:5000 outlan:test
        
        # Wait for container to be ready
        sleep 10
        
        # Test if the application is responding
        curl -f http://localhost:5000/ || exit 1
        
        # Test health endpoint
        curl -f http://localhost:5000/api/health || exit 1
        
        # Test version endpoint
        curl -f http://localhost:5000/api/version || exit 1
        
        # Clean up
        docker stop outlan-test
        docker rm outlan-test

    - name: Test Docker image with volumes
      run: |
        # Create test directories
        mkdir -p test-data test-logs test-config
        
        # Start container with volumes
        docker run -d --name outlan-test-volumes \
          -p 5001:5000 \
          -v $(pwd)/test-data:/app/data \
          -v $(pwd)/test-logs:/app/logs \
          -v $(pwd)/test-config:/app/config \
          -e TZ=UTC \
          outlan:test
        
        # Wait for container to be ready
        sleep 10
        
        # Test if the application is responding
        curl -f http://localhost:5001/ || exit 1
        
        # Check if data directory is created
        ls -la test-data/ || exit 1
        
        # Clean up
        docker stop outlan-test-volumes
        docker rm outlan-test-volumes
        rm -rf test-data test-logs test-config

    - name: Test Docker image environment variables
      run: |
        # Test with custom environment variables
        docker run -d --name outlan-test-env \
          -p 5002:5000 \
          -e TZ=America/New_York \
          -e LOG_LEVEL=DEBUG \
          -e SNAPSHOT_LIMIT=50 \
          outlan:test
        
        # Wait for container to be ready
        sleep 10
        
        # Test if the application is responding
        curl -f http://localhost:5002/ || exit 1
        
        # Clean up
        docker stop outlan-test-env
        docker rm outlan-test-env

  test-security:
    runs-on: ubuntu-latest
    needs: test-docker
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: outlan:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: outlan:test
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif' 